name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment (staging or prod)'
        required: true
        default: 'staging'

env:
  PROJECT_ID: flightiq-475420
  REGION: us-east4
  SERVICE: my-service
  WORKLOAD_IDENTITY_PROVIDER: projects/941378787241/locations/global/workloadIdentityPools/github/providers/my-repo
  SERVICE_ACCOUNT: github-deployer@flightiq-475420.iam.gserviceaccount.com

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build with Maven
        run: mvn clean package -DskipTests
        working-directory: ./Navigation

      # Authenticate to Google Cloud via Workload Identity Federation
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      # Configure Docker login using the access_token
      - name: Docker login to Artifact Registry
        uses: docker/login-action@v3
        with:
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.auth_token }}
          registry: ${{ env.REGION }}-docker.pkg.dev

      # Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          DOCKER_TAG=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
          docker build -t $DOCKER_TAG ./Navigation
          docker push $DOCKER_TAG

      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

      # Show Cloud Run URL
      - name: Show Cloud Run URL
        run: echo ${{ steps.deploy.outputs.url }}
